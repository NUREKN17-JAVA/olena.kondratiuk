package ua.nure.cs.kondratiuk.usermanagement.db;


import java.io.IOException;
import java.util.Properties;
import java.util.Scanner;

public class DaoFactory {
	private static final String USER_DAO = "ua.nure.cs.kondratiuk.usermanagement.db.Dao";
	private static final String DAO_FACTORY = "dao.factory";
	private static Properties properties;
	
	private static DaoFactory INSTANCE = new DaoFactory();
	
	private DaoFactory() {
		properties = new Properties();
//		System.out.println(IOUtils.toString(getClass().getClassLoader().getResourceAsStream("settings.properties"), encoding));
//		System.out.println("1");	
		Scanner s = new Scanner(getClass().getClassLoader().getResourceAsStream("settings.properties")).useDelimiter("\\A");
		String result = s.hasNext() ? s.next() : "";
		System.out.println(result + "1");	
	try {
		properties.load(getClass().getClassLoader().getResourceAsStream("settings.properties"));
	} catch (IOException e) {
		System.out.println(DaoFactory.class.getClassLoader().getResourceAsStream("settings.properties"));
		throw new RuntimeException(e);
	}
	}
	//private static DaoFactory instance;
//	protected static Properties properties;
	
//	static {
//		properties = new Properties();
//		try {
//			properties.load(DaoFactory.class.getClassLoader().getResourceAsStream("settings.properties"));
//		} catch (IOException e) {
//			throw new RuntimeException(e);
//		}
//	}
	
	private ConnectionFactory getConnectionFactory () {
		String user = properties.getProperty("connection.user");
		String password = properties.getProperty("connection.password");
		String url = properties.getProperty("connection.url");
		String driver = properties.getProperty("connection.driver");
		return new ConnectionFactoryImpl(driver, url, user, password);		
	}
	
	public Dao getDao () {
		Dao result = null;
		try {
			Class clazz = Class.forName(properties.getProperty(USER_DAO));
			result = (Dao) clazz.newInstance();
			result.setConnectionFactory(getConnectionFactory());
		} catch (Exception e) {
			throw new RuntimeException(e);
		}		
		return result;
	}
	
//	public static synchronized DaoFactory getInstance() {
//		if (INSTANCE == null) {
//			Class<?> factoryClass;
//			try {
//				factoryClass = Class.forName(properties.getProperty(DAO_FACTORY));
//				INSTANCE = (DaoFactory) factoryClass.newInstance();
//			} catch (Exception e) {
//				throw new RuntimeException(e);
//			}
//		}
//		return INSTANCE;
//	}
	
	public static DaoFactory getInstance() {
        return new DaoFactory();
    }
}
	
